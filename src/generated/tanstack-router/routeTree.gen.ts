// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './../../routes/__root'
import { Route as IndexRouteImport } from './../../routes/index'
import { Route as RegisterIndexRouteImport } from './../../routes/register/index'
import { Route as MemberRegisterIndexRouteImport } from './../../routes/member-register/index'
import { Route as AdminVenuesIndexRouteImport } from './../../routes/admin/venues/index'
import { Route as AdminUsersIndexRouteImport } from './../../routes/admin/users/index'
import { Route as AdminSessionsIndexRouteImport } from './../../routes/admin/sessions/index'
import { Route as AdminReportingIndexRouteImport } from './../../routes/admin/reporting/index'
import { Route as AdminProductsIndexRouteImport } from './../../routes/admin/products/index'
import { Route as AdminOrdersIndexRouteImport } from './../../routes/admin/orders/index'
import { Route as AdminExpensesIndexRouteImport } from './../../routes/admin/expenses/index'
import { Route as AdminEventsIndexRouteImport } from './../../routes/admin/events/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterIndexRoute = RegisterIndexRouteImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRouteImport,
} as any)
const MemberRegisterIndexRoute = MemberRegisterIndexRouteImport.update({
  id: '/member-register/',
  path: '/member-register/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminVenuesIndexRoute = AdminVenuesIndexRouteImport.update({
  id: '/admin/venues/',
  path: '/admin/venues/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminUsersIndexRoute = AdminUsersIndexRouteImport.update({
  id: '/admin/users/',
  path: '/admin/users/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminSessionsIndexRoute = AdminSessionsIndexRouteImport.update({
  id: '/admin/sessions/',
  path: '/admin/sessions/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminReportingIndexRoute = AdminReportingIndexRouteImport.update({
  id: '/admin/reporting/',
  path: '/admin/reporting/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminProductsIndexRoute = AdminProductsIndexRouteImport.update({
  id: '/admin/products/',
  path: '/admin/products/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminOrdersIndexRoute = AdminOrdersIndexRouteImport.update({
  id: '/admin/orders/',
  path: '/admin/orders/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminExpensesIndexRoute = AdminExpensesIndexRouteImport.update({
  id: '/admin/expenses/',
  path: '/admin/expenses/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminEventsIndexRoute = AdminEventsIndexRouteImport.update({
  id: '/admin/events/',
  path: '/admin/events/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/member-register': typeof MemberRegisterIndexRoute
  '/register': typeof RegisterIndexRoute
  '/admin/events': typeof AdminEventsIndexRoute
  '/admin/expenses': typeof AdminExpensesIndexRoute
  '/admin/orders': typeof AdminOrdersIndexRoute
  '/admin/products': typeof AdminProductsIndexRoute
  '/admin/reporting': typeof AdminReportingIndexRoute
  '/admin/sessions': typeof AdminSessionsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/admin/venues': typeof AdminVenuesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/member-register': typeof MemberRegisterIndexRoute
  '/register': typeof RegisterIndexRoute
  '/admin/events': typeof AdminEventsIndexRoute
  '/admin/expenses': typeof AdminExpensesIndexRoute
  '/admin/orders': typeof AdminOrdersIndexRoute
  '/admin/products': typeof AdminProductsIndexRoute
  '/admin/reporting': typeof AdminReportingIndexRoute
  '/admin/sessions': typeof AdminSessionsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/admin/venues': typeof AdminVenuesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/member-register/': typeof MemberRegisterIndexRoute
  '/register/': typeof RegisterIndexRoute
  '/admin/events/': typeof AdminEventsIndexRoute
  '/admin/expenses/': typeof AdminExpensesIndexRoute
  '/admin/orders/': typeof AdminOrdersIndexRoute
  '/admin/products/': typeof AdminProductsIndexRoute
  '/admin/reporting/': typeof AdminReportingIndexRoute
  '/admin/sessions/': typeof AdminSessionsIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
  '/admin/venues/': typeof AdminVenuesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/member-register'
    | '/register'
    | '/admin/events'
    | '/admin/expenses'
    | '/admin/orders'
    | '/admin/products'
    | '/admin/reporting'
    | '/admin/sessions'
    | '/admin/users'
    | '/admin/venues'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/member-register'
    | '/register'
    | '/admin/events'
    | '/admin/expenses'
    | '/admin/orders'
    | '/admin/products'
    | '/admin/reporting'
    | '/admin/sessions'
    | '/admin/users'
    | '/admin/venues'
  id:
    | '__root__'
    | '/'
    | '/member-register/'
    | '/register/'
    | '/admin/events/'
    | '/admin/expenses/'
    | '/admin/orders/'
    | '/admin/products/'
    | '/admin/reporting/'
    | '/admin/sessions/'
    | '/admin/users/'
    | '/admin/venues/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MemberRegisterIndexRoute: typeof MemberRegisterIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
  AdminEventsIndexRoute: typeof AdminEventsIndexRoute
  AdminExpensesIndexRoute: typeof AdminExpensesIndexRoute
  AdminOrdersIndexRoute: typeof AdminOrdersIndexRoute
  AdminProductsIndexRoute: typeof AdminProductsIndexRoute
  AdminReportingIndexRoute: typeof AdminReportingIndexRoute
  AdminSessionsIndexRoute: typeof AdminSessionsIndexRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
  AdminVenuesIndexRoute: typeof AdminVenuesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/member-register/': {
      id: '/member-register/'
      path: '/member-register'
      fullPath: '/member-register'
      preLoaderRoute: typeof MemberRegisterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/venues/': {
      id: '/admin/venues/'
      path: '/admin/venues'
      fullPath: '/admin/venues'
      preLoaderRoute: typeof AdminVenuesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/sessions/': {
      id: '/admin/sessions/'
      path: '/admin/sessions'
      fullPath: '/admin/sessions'
      preLoaderRoute: typeof AdminSessionsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/reporting/': {
      id: '/admin/reporting/'
      path: '/admin/reporting'
      fullPath: '/admin/reporting'
      preLoaderRoute: typeof AdminReportingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/products/': {
      id: '/admin/products/'
      path: '/admin/products'
      fullPath: '/admin/products'
      preLoaderRoute: typeof AdminProductsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/orders/': {
      id: '/admin/orders/'
      path: '/admin/orders'
      fullPath: '/admin/orders'
      preLoaderRoute: typeof AdminOrdersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/expenses/': {
      id: '/admin/expenses/'
      path: '/admin/expenses'
      fullPath: '/admin/expenses'
      preLoaderRoute: typeof AdminExpensesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/events/': {
      id: '/admin/events/'
      path: '/admin/events'
      fullPath: '/admin/events'
      preLoaderRoute: typeof AdminEventsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MemberRegisterIndexRoute: MemberRegisterIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
  AdminEventsIndexRoute: AdminEventsIndexRoute,
  AdminExpensesIndexRoute: AdminExpensesIndexRoute,
  AdminOrdersIndexRoute: AdminOrdersIndexRoute,
  AdminProductsIndexRoute: AdminProductsIndexRoute,
  AdminReportingIndexRoute: AdminReportingIndexRoute,
  AdminSessionsIndexRoute: AdminSessionsIndexRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
  AdminVenuesIndexRoute: AdminVenuesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
