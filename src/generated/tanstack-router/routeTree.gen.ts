// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './../../routes/__root'
import { Route as IndexImport } from './../../routes/index'
import { Route as RegisterIndexImport } from './../../routes/register/index'
import { Route as MemberRegisterIndexImport } from './../../routes/member-register/index'
import { Route as AdminVenuesIndexImport } from './../../routes/admin/venues/index'
import { Route as AdminUsersIndexImport } from './../../routes/admin/users/index'
import { Route as AdminSessionsIndexImport } from './../../routes/admin/sessions/index'
import { Route as AdminReportingIndexImport } from './../../routes/admin/reporting/index'
import { Route as AdminProductsIndexImport } from './../../routes/admin/products/index'
import { Route as AdminOrdersIndexImport } from './../../routes/admin/orders/index'
import { Route as AdminExpensesIndexImport } from './../../routes/admin/expenses/index'
import { Route as AdminEventsIndexImport } from './../../routes/admin/events/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RegisterIndexRoute = RegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const MemberRegisterIndexRoute = MemberRegisterIndexImport.update({
  id: '/member-register/',
  path: '/member-register/',
  getParentRoute: () => rootRoute,
} as any)

const AdminVenuesIndexRoute = AdminVenuesIndexImport.update({
  id: '/admin/venues/',
  path: '/admin/venues/',
  getParentRoute: () => rootRoute,
} as any)

const AdminUsersIndexRoute = AdminUsersIndexImport.update({
  id: '/admin/users/',
  path: '/admin/users/',
  getParentRoute: () => rootRoute,
} as any)

const AdminSessionsIndexRoute = AdminSessionsIndexImport.update({
  id: '/admin/sessions/',
  path: '/admin/sessions/',
  getParentRoute: () => rootRoute,
} as any)

const AdminReportingIndexRoute = AdminReportingIndexImport.update({
  id: '/admin/reporting/',
  path: '/admin/reporting/',
  getParentRoute: () => rootRoute,
} as any)

const AdminProductsIndexRoute = AdminProductsIndexImport.update({
  id: '/admin/products/',
  path: '/admin/products/',
  getParentRoute: () => rootRoute,
} as any)

const AdminOrdersIndexRoute = AdminOrdersIndexImport.update({
  id: '/admin/orders/',
  path: '/admin/orders/',
  getParentRoute: () => rootRoute,
} as any)

const AdminExpensesIndexRoute = AdminExpensesIndexImport.update({
  id: '/admin/expenses/',
  path: '/admin/expenses/',
  getParentRoute: () => rootRoute,
} as any)

const AdminEventsIndexRoute = AdminEventsIndexImport.update({
  id: '/admin/events/',
  path: '/admin/events/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/member-register/': {
      id: '/member-register/'
      path: '/member-register'
      fullPath: '/member-register'
      preLoaderRoute: typeof MemberRegisterIndexImport
      parentRoute: typeof rootRoute
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/events/': {
      id: '/admin/events/'
      path: '/admin/events'
      fullPath: '/admin/events'
      preLoaderRoute: typeof AdminEventsIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/expenses/': {
      id: '/admin/expenses/'
      path: '/admin/expenses'
      fullPath: '/admin/expenses'
      preLoaderRoute: typeof AdminExpensesIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/orders/': {
      id: '/admin/orders/'
      path: '/admin/orders'
      fullPath: '/admin/orders'
      preLoaderRoute: typeof AdminOrdersIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/products/': {
      id: '/admin/products/'
      path: '/admin/products'
      fullPath: '/admin/products'
      preLoaderRoute: typeof AdminProductsIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/reporting/': {
      id: '/admin/reporting/'
      path: '/admin/reporting'
      fullPath: '/admin/reporting'
      preLoaderRoute: typeof AdminReportingIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/sessions/': {
      id: '/admin/sessions/'
      path: '/admin/sessions'
      fullPath: '/admin/sessions'
      preLoaderRoute: typeof AdminSessionsIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/venues/': {
      id: '/admin/venues/'
      path: '/admin/venues'
      fullPath: '/admin/venues'
      preLoaderRoute: typeof AdminVenuesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/member-register': typeof MemberRegisterIndexRoute
  '/register': typeof RegisterIndexRoute
  '/admin/events': typeof AdminEventsIndexRoute
  '/admin/expenses': typeof AdminExpensesIndexRoute
  '/admin/orders': typeof AdminOrdersIndexRoute
  '/admin/products': typeof AdminProductsIndexRoute
  '/admin/reporting': typeof AdminReportingIndexRoute
  '/admin/sessions': typeof AdminSessionsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/admin/venues': typeof AdminVenuesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/member-register': typeof MemberRegisterIndexRoute
  '/register': typeof RegisterIndexRoute
  '/admin/events': typeof AdminEventsIndexRoute
  '/admin/expenses': typeof AdminExpensesIndexRoute
  '/admin/orders': typeof AdminOrdersIndexRoute
  '/admin/products': typeof AdminProductsIndexRoute
  '/admin/reporting': typeof AdminReportingIndexRoute
  '/admin/sessions': typeof AdminSessionsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/admin/venues': typeof AdminVenuesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/member-register/': typeof MemberRegisterIndexRoute
  '/register/': typeof RegisterIndexRoute
  '/admin/events/': typeof AdminEventsIndexRoute
  '/admin/expenses/': typeof AdminExpensesIndexRoute
  '/admin/orders/': typeof AdminOrdersIndexRoute
  '/admin/products/': typeof AdminProductsIndexRoute
  '/admin/reporting/': typeof AdminReportingIndexRoute
  '/admin/sessions/': typeof AdminSessionsIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
  '/admin/venues/': typeof AdminVenuesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/member-register'
    | '/register'
    | '/admin/events'
    | '/admin/expenses'
    | '/admin/orders'
    | '/admin/products'
    | '/admin/reporting'
    | '/admin/sessions'
    | '/admin/users'
    | '/admin/venues'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/member-register'
    | '/register'
    | '/admin/events'
    | '/admin/expenses'
    | '/admin/orders'
    | '/admin/products'
    | '/admin/reporting'
    | '/admin/sessions'
    | '/admin/users'
    | '/admin/venues'
  id:
    | '__root__'
    | '/'
    | '/member-register/'
    | '/register/'
    | '/admin/events/'
    | '/admin/expenses/'
    | '/admin/orders/'
    | '/admin/products/'
    | '/admin/reporting/'
    | '/admin/sessions/'
    | '/admin/users/'
    | '/admin/venues/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MemberRegisterIndexRoute: typeof MemberRegisterIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
  AdminEventsIndexRoute: typeof AdminEventsIndexRoute
  AdminExpensesIndexRoute: typeof AdminExpensesIndexRoute
  AdminOrdersIndexRoute: typeof AdminOrdersIndexRoute
  AdminProductsIndexRoute: typeof AdminProductsIndexRoute
  AdminReportingIndexRoute: typeof AdminReportingIndexRoute
  AdminSessionsIndexRoute: typeof AdminSessionsIndexRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
  AdminVenuesIndexRoute: typeof AdminVenuesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MemberRegisterIndexRoute: MemberRegisterIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
  AdminEventsIndexRoute: AdminEventsIndexRoute,
  AdminExpensesIndexRoute: AdminExpensesIndexRoute,
  AdminOrdersIndexRoute: AdminOrdersIndexRoute,
  AdminProductsIndexRoute: AdminProductsIndexRoute,
  AdminReportingIndexRoute: AdminReportingIndexRoute,
  AdminSessionsIndexRoute: AdminSessionsIndexRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
  AdminVenuesIndexRoute: AdminVenuesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/member-register/",
        "/register/",
        "/admin/events/",
        "/admin/expenses/",
        "/admin/orders/",
        "/admin/products/",
        "/admin/reporting/",
        "/admin/sessions/",
        "/admin/users/",
        "/admin/venues/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/member-register/": {
      "filePath": "member-register/index.tsx"
    },
    "/register/": {
      "filePath": "register/index.tsx"
    },
    "/admin/events/": {
      "filePath": "admin/events/index.tsx"
    },
    "/admin/expenses/": {
      "filePath": "admin/expenses/index.tsx"
    },
    "/admin/orders/": {
      "filePath": "admin/orders/index.tsx"
    },
    "/admin/products/": {
      "filePath": "admin/products/index.tsx"
    },
    "/admin/reporting/": {
      "filePath": "admin/reporting/index.tsx"
    },
    "/admin/sessions/": {
      "filePath": "admin/sessions/index.tsx"
    },
    "/admin/users/": {
      "filePath": "admin/users/index.tsx"
    },
    "/admin/venues/": {
      "filePath": "admin/venues/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
